Automatic Database Migrations
=============================

Historically, keeping your database in sync with what's expected by the code has been error-prone and annoying, but now CATMAID has a simple system for automatic migrations.  If the backend detects that the code requires updates to the database schema, it will apply those automatically.  This page describes what you need to know about these migrations.

I got the error "Migrating the database failed."
------------------------------------------------

Are you adding a new migration yourself?  Something's wrong with your SQL, and you need to check the error in Apache's `error.log` file and then fix the SQL that you added to `migrations.php`.


I want to make a change to the database
---------------------------------------

If you want to make a change to the database, you would start by generating
a template migration by running the script `scripts/database/add-migration.py`, supplying a short description of what change the migration makes, e.g.::

    scripts/database/add-migration.py "Remove the bezierkey table"

This will add a new migration to the file `inc/migrations.php`.  You should
edit that file, and you will find near the end a section that looks like::

           '2011-07-12T15:27:38' => new Migration(
                   'Remove the bezierkey table',
                   <<<EOMIGRATION
    [Put your migration here.]
    EOMIGRATION
    ),

You just replace the line `[Put your migration here.]` with your SQL.  The next time you reload CATMAID from your browser, this migration will be automatically run.  You should commit and push that change before (or in the same commit as) code that relies on the new version of the schema, of course.

I just want to drop the database and start from scratch
-------------------------------------------------------

If you're *really* sure that you don't need any of the data in your catmaid database, you can just drop the database and start again:

Drop the database::

  sudo -u postgres dropdb catmaid

Run the commands generated by the `createuser.sh` script to
make sure that the database, the database user, various
functions and the plpgsql language are all created.  The
parameters to that script are the database name, the
database user and the password for that database user::

  scripts/createuser.sh catmaid catmaid_user p4ssw0rd | sudo -u postgres psql

(You may get errors saying that the user role has already been created, and that
the functions already exist.  You can safely ignore these.)

Now visit your CATMAID web page and the schema of the database will be updated.  If you want to add back the example projects, you need to run the script `scripts/database/insert-example-projects.py`.
